[2025-08-05 22:11:50] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 22:11:50] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-05 22:11:54] PRE-COMMIT: SSOT validation passed
[2025-08-05 22:11:54] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-05 22:11:55] PRE-COMMIT: STATUS.md format validation completed
[2025-08-05 22:11:55] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 22:11:56] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 22:11:58] POST-COMMIT: Merge commit detected, skipping STATUS.md automation
[2025-08-05 22:17:56] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 22:17:57] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-05 22:18:00] PRE-COMMIT: SSOT validation passed
[2025-08-05 22:18:00] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-05 22:18:00] PRE-COMMIT: STATUS.md format validation completed
[2025-08-05 22:18:00] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 22:18:00] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 22:18:01] POST-COMMIT: Merge commit detected, skipping STATUS.md automation
[2025-08-05 22:21:29] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 22:21:29] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-05 22:21:35] PRE-COMMIT: SSOT validation passed
[2025-08-05 22:21:35] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 22:21:37] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 22:21:37] POST-COMMIT: Processing commit: e91d89a - Test: Verify STATUS.md automation Phase 3
[2025-08-05 22:21:37] POST-COMMIT: Running STATUS.md automation...
[22:21:38] INFO: Starting STATUS.md update (source: git-commit)
[22:21:38] INFO: Updating timestamp
[22:21:38] INFO: Analyzing last 5 commits
[22:21:38] INFO: Commit analysis: 5 commits categorized
[22:21:38] INFO: Analyzing source code status
[22:21:50] INFO: Code analysis: 80 TODOs, 2 drivers checked
[22:21:50] INFO: Updating architecture status
[22:21:50] INFO: Format validation passed
[22:21:50] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-05 22:21:50] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-05 22:21:50] POST-COMMIT: No STATUS.md changes needed
[2025-08-05 22:21:50] POST-COMMIT: === Post-commit hook completed ===
[2025-08-05 22:23:30] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 22:23:30] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-05 22:23:37] PRE-COMMIT: SSOT validation passed
[2025-08-05 22:23:39] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 22:23:42] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 22:23:47] POST-COMMIT: Processing commit: fd23715 - Clean up automation test artifacts
[2025-08-05 22:23:47] POST-COMMIT: Running STATUS.md automation...
[22:23:49] INFO: Starting STATUS.md update (source: git-commit)
[22:23:49] INFO: Updating timestamp
[22:23:49] INFO: Analyzing last 5 commits
[22:23:50] INFO: Commit analysis: 5 commits categorized
[22:23:50] INFO: Analyzing source code status
[22:23:59] INFO: Code analysis: 80 TODOs, 2 drivers checked
[22:23:59] INFO: Updating architecture status
[22:23:59] INFO: Format validation passed
[22:23:59] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-05 22:23:59] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-05 22:24:01] POST-COMMIT: No STATUS.md changes needed
[2025-08-05 22:24:01] POST-COMMIT: === Post-commit hook completed ===
[2025-08-05 23:43:23] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 23:43:23] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-05 23:43:23] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 23:43:23] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 23:43:23] POST-COMMIT: Processing commit: 45073d9 - feat: Complete STATUS.md Automation Phase 3 - Git hooks + optimized monitoring
[2025-08-05 23:43:23] POST-COMMIT: Running STATUS.md automation...
[23:43:23] INFO: Starting STATUS.md update (source: git-commit)
[23:43:23] INFO: Updating timestamp
[23:43:23] INFO: Analyzing last 5 commits
[23:43:23] INFO: Commit analysis: 5 commits categorized
[23:43:23] INFO: Analyzing source code status
[23:43:24] INFO: Code analysis: 80 TODOs, 2 drivers checked
[23:43:24] INFO: Updating architecture status
[23:43:24] INFO: Format validation passed
[23:43:24] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-05 23:43:24] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-05 23:43:24] POST-COMMIT: No STATUS.md changes needed
[2025-08-05 23:43:24] POST-COMMIT: === Post-commit hook completed ===
[2025-08-05 23:55:16] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-05 23:55:16] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-05 23:55:16] PRE-COMMIT: SSOT validation passed
[2025-08-05 23:55:16] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-05 23:55:16] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-05 23:55:16] POST-COMMIT: Processing commit: f98c584 - docs: Update all documentation to reflect Phase 3 automation completion
[2025-08-05 23:55:17] POST-COMMIT: Running STATUS.md automation...
[23:55:17] INFO: Starting STATUS.md update (source: git-commit)
[23:55:17] INFO: Updating timestamp
[23:55:17] INFO: Analyzing last 5 commits
[23:55:17] INFO: Commit analysis: 5 commits categorized
[23:55:17] INFO: Analyzing source code status
[23:55:17] INFO: Code analysis: 80 TODOs, 2 drivers checked
[23:55:17] INFO: Updating architecture status
[23:55:17] INFO: Format validation passed
[23:55:17] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-05 23:55:17] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-05 23:55:17] POST-COMMIT: No STATUS.md changes needed
[2025-08-05 23:55:17] POST-COMMIT: === Post-commit hook completed ===
[2025-08-06 01:05:43] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 01:05:43] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-06 01:05:44] PRE-COMMIT: SSOT validation passed
[2025-08-06 01:05:44] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-06 01:05:44] PRE-COMMIT: STATUS.md format validation completed
[2025-08-06 01:05:44] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 01:05:44] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-06 01:05:44] POST-COMMIT: Processing commit: 8930d20 - fix: Apply Black formatting with 79 character line limit
[2025-08-06 01:05:44] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-06 01:18:36] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 01:18:36] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-06 01:18:36] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 01:18:36] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-06 01:18:36] POST-COMMIT: Processing commit: bd0bc18 - fix: Resolve remaining line-too-long errors in Python files
[2025-08-06 01:18:36] POST-COMMIT: Running STATUS.md automation...
[01:18:36] INFO: Starting STATUS.md update (source: git-commit)
[01:18:36] INFO: Updating timestamp
[01:18:36] INFO: Analyzing last 5 commits
[01:18:37] INFO: Commit analysis: 5 commits categorized
[01:18:37] INFO: Analyzing source code status
[01:18:37] INFO: Code analysis: 80 TODOs, 2 drivers checked
[01:18:37] INFO: Updating architecture status
[01:18:37] INFO: Format validation passed
[01:18:37] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-06 01:18:37] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-06 01:18:37] POST-COMMIT: No STATUS.md changes needed
[2025-08-06 01:18:37] POST-COMMIT: === Post-commit hook completed ===
[2025-08-06 01:22:49] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 01:22:49] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-06 01:22:49] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 16:56:55] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 16:56:55] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-06 16:56:55] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 16:56:55] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-06 16:56:55] POST-COMMIT: Processing commit: e6beb92 - config: Hide line-too-long errors requiring restructuring
[2025-08-06 16:56:56] POST-COMMIT: Running STATUS.md automation...
[16:56:56] INFO: Starting STATUS.md update (source: git-commit)
[16:56:56] INFO: Updating timestamp
[16:56:56] INFO: Analyzing last 5 commits
[16:56:56] INFO: Commit analysis: 5 commits categorized
[16:56:56] INFO: Analyzing source code status
[16:56:57] INFO: Code analysis: 80 TODOs, 2 drivers checked
[16:56:57] INFO: Updating architecture status
[16:56:57] INFO: Format validation passed
[16:56:57] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-06 16:56:57] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-06 16:56:57] POST-COMMIT: No STATUS.md changes needed
[2025-08-06 16:56:57] POST-COMMIT: === Post-commit hook completed ===
[2025-08-06 17:04:42] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 17:04:42] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 230 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 9 more files with violations
✅ Include dependencies look correct

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 230
   • Include dependency issues: 0
   • Configuration inconsistencies: 1
   • Total issues found: 231

🔧 Action required: 231 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-06 17:04:42] PRE-COMMIT: SSOT validation passed
[2025-08-06 17:04:42] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 17:04:42] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-06 17:04:43] POST-COMMIT: Processing commit: 07904ac - config: Hide line-too-long errors requiring restructuring
[2025-08-06 17:04:43] POST-COMMIT: Running STATUS.md automation...
[17:04:43] INFO: Starting STATUS.md update (source: git-commit)
[17:04:43] INFO: Updating timestamp
[17:04:43] INFO: Analyzing last 5 commits
[17:04:43] INFO: Commit analysis: 5 commits categorized
[17:04:43] INFO: Analyzing source code status
[17:04:43] INFO: Code analysis: 80 TODOs, 2 drivers checked
[17:04:43] INFO: Updating architecture status
[17:04:43] INFO: Format validation passed
[17:04:43] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 80
ℹ️  No updates needed
[2025-08-06 17:04:43] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-06 17:04:43] POST-COMMIT: No STATUS.md changes needed
[2025-08-06 17:04:43] POST-COMMIT: === Post-commit hook completed ===
[2025-08-06 21:08:35] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-06 21:08:36] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 260 potential SSOT violations:

   📁 src/application/main.c:
      Line 93: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 94: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 23: extern SPI_HandleTypeDef hspi2;    // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 24: extern I2C_HandleTypeDef hi2c1;    // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 25: extern I2C_HandleTypeDef hi2c2;    // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 103: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 608: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 616: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 80: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 86: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 314: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 529: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 543: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 14 more files with violations

⚠️  Found 4 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/simulation/motor_simulation.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 260
   • Include dependency issues: 4
   • Configuration inconsistencies: 1
   • Total issues found: 265

🔧 Action required: 265 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-06 21:08:36] PRE-COMMIT: SSOT validation passed
[2025-08-06 21:08:37] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-06 21:08:37] PRE-COMMIT: STATUS.md format validation completed
[2025-08-06 21:08:37] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-06 21:08:37] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-06 21:08:37] POST-COMMIT: Processing commit: 092a0ed - feat: Complete HAL abstraction layer implementation
[2025-08-06 21:08:37] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 00:43:28] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 00:43:28] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 270 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 14 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 270
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 274

🔧 Action required: 274 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 00:43:29] PRE-COMMIT: SSOT validation passed
[2025-08-07 00:43:29] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 00:43:29] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 00:43:29] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 00:43:29] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 00:43:29] POST-COMMIT: Processing commit: e844084 - feat: Complete HAL abstraction migration - 100% dual compiler support
[2025-08-07 00:43:29] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 01:00:47] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 01:00:47] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 270 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 14 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 270
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 274

🔧 Action required: 274 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 01:00:48] PRE-COMMIT: SSOT validation passed
[2025-08-07 01:00:48] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 01:00:48] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 01:00:48] POST-COMMIT: Processing commit: e6e205d - docs: archive legacy documentation post-HAL abstraction milestone
[2025-08-07 01:00:48] POST-COMMIT: Running STATUS.md automation...
[01:00:48] INFO: Starting STATUS.md update (source: git-commit)
[01:00:48] INFO: Updating timestamp
[01:00:48] INFO: Analyzing last 5 commits
[01:00:48] INFO: Commit analysis: 5 commits categorized
[01:00:48] INFO: Analyzing source code status
[01:00:49] INFO: Code analysis: 78 TODOs, 2 drivers checked
[01:00:49] INFO: Updating architecture status
[01:00:49] INFO: Format validation passed
[01:00:49] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 78
ℹ️  No updates needed
[2025-08-07 01:00:49] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 01:00:49] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 01:00:49] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 01:02:36] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 01:02:36] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 270 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 14 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 270
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 274

🔧 Action required: 274 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 01:02:37] PRE-COMMIT: SSOT validation passed
[2025-08-07 01:02:37] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 01:02:37] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 01:02:37] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 01:02:37] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 01:02:37] POST-COMMIT: Processing commit: fe36113 - docs: update STATUS.md to reflect documentation cleanup
[2025-08-07 01:02:37] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 04:09:48] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 04:09:48] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 276 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 15 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 276
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 280

🔧 Action required: 280 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 04:09:48] PRE-COMMIT: SSOT validation passed
[2025-08-07 04:09:48] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 04:09:49] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 04:09:49] POST-COMMIT: Processing commit: 4b65320 - docs: complete link validation and cleanup for documentation suite
[2025-08-07 04:09:49] POST-COMMIT: Running STATUS.md automation...
❌ Error: Format validation failed
Traceback (most recent call last):
  File "/workspaces/code/scripts/auto_update_status.py", line 590, in main
    result = updater.run_update(
  File "/workspaces/code/scripts/auto_update_status.py", line 519, in run_update
    raise RuntimeError("Format validation failed")
RuntimeError: Format validation failed
[04:09:49] INFO: Starting STATUS.md update (source: git-commit)
[04:09:49] INFO: Updating timestamp
[04:09:49] INFO: Analyzing last 5 commits
[04:09:49] INFO: Commit analysis: 5 commits categorized
[04:09:49] INFO: Analyzing source code status
[04:09:50] INFO: Code analysis: 79 TODOs, 2 drivers checked
[04:09:50] INFO: Updating architecture status
[04:09:50] ERROR: Missing required section: 🔧 Setup Summary
[2025-08-07 04:09:50] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 04:09:50] POST-COMMIT: STATUS.md was updated, staging and committing changes
[2025-08-07 04:09:52] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 04:09:52] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 04:09:52] POST-COMMIT: Processing commit: ae37626 - 📊 Auto-update STATUS.md from commit 4b65320
[2025-08-07 04:09:52] POST-COMMIT: Processing commit: ae37626 - 📊 Auto-update STATUS.md from commit 4b65320
[2025-08-07 04:09:52] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 04:09:52] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[main ae37626] 📊 Auto-update STATUS.md from commit 4b65320
 1 file changed, 136 insertions(+), 329 deletions(-)
 rewrite STATUS.md (98%)
[2025-08-07 04:09:52] POST-COMMIT: STATUS.md auto-commit completed
[2025-08-07 04:09:52] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 04:45:29] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 04:45:30] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 276 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 15 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 276
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 280

🔧 Action required: 280 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 04:45:30] PRE-COMMIT: SSOT validation passed
[2025-08-07 04:45:30] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 04:45:30] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 04:45:30] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 04:45:30] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 04:45:30] POST-COMMIT: Processing commit: 491f21d - 📋 Pre-safety integration checkpoint
[2025-08-07 04:45:30] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 04:58:45] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 04:58:45] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 276 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 15 more files with violations

⚠️  Found 3 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 276
   • Include dependency issues: 3
   • Configuration inconsistencies: 1
   • Total issues found: 280

🔧 Action required: 280 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 04:58:46] PRE-COMMIT: SSOT validation passed
[2025-08-07 04:58:46] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 04:58:46] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 04:58:46] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 04:58:46] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 04:58:46] POST-COMMIT: Processing commit: 8c8afe9 - ✅ L6470 Emergency Stop Integration Complete - Phase 1 Step 1
[2025-08-07 04:58:46] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 05:10:57] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 05:10:58] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 278 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 278
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 286

🔧 Action required: 286 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 05:10:58] PRE-COMMIT: SSOT validation passed
[2025-08-07 05:10:58] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 05:10:58] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 05:10:58] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 05:10:58] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:10:58] POST-COMMIT: Processing commit: 2755d80 - feat: Complete L6470 hardware fault monitoring implementation
[2025-08-07 05:10:58] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 05:15:00] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 05:15:00] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 278 potential SSOT violations:

   📁 src/application/main.c:
      Line 96: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 97: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 25: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 26: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 27: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 278
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 286

🔧 Action required: 286 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 05:15:00] PRE-COMMIT: SSOT validation passed
[2025-08-07 05:15:00] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 05:15:00] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 05:15:00] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 05:15:00] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:15:00] POST-COMMIT: Processing commit: adf9aa5 - docs: Update STATUS.md with Phase 1 Step 2 completion
[2025-08-07 05:15:00] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 05:20:37] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 05:20:37] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-07 05:20:37] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 05:35:29] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 05:35:29] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 278 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 278
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 286

🔧 Action required: 286 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 05:35:30] PRE-COMMIT: SSOT validation passed
[2025-08-07 05:35:30] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 05:35:30] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:35:30] POST-COMMIT: Processing commit: e4774e9 - feat: complete Phase 1 Step 3 - Watchdog Integration
[2025-08-07 05:35:30] POST-COMMIT: Running STATUS.md automation...
[05:35:30] INFO: Starting STATUS.md update (source: git-commit)
[05:35:30] INFO: Updating timestamp
[05:35:30] INFO: Analyzing last 5 commits
[05:35:30] INFO: Commit analysis: 5 commits categorized
[05:35:30] INFO: Analyzing source code status
[05:35:31] INFO: Code analysis: 75 TODOs, 2 drivers checked
[05:35:31] INFO: Updating architecture status
[05:35:31] INFO: Format validation passed
[05:35:31] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 75
ℹ️  No updates needed
[2025-08-07 05:35:31] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 05:35:31] POST-COMMIT: STATUS.md was updated, staging and committing changes
[2025-08-07 05:35:32] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:35:32] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:35:32] POST-COMMIT: Processing commit: f00f9dd - 📊 Auto-update STATUS.md from commit e4774e9
[2025-08-07 05:35:32] POST-COMMIT: Processing commit: f00f9dd - 📊 Auto-update STATUS.md from commit e4774e9
[2025-08-07 05:35:32] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 05:35:32] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[main f00f9dd] 📊 Auto-update STATUS.md from commit e4774e9
 1 file changed, 8 insertions(+), 8 deletions(-)
[2025-08-07 05:35:32] POST-COMMIT: STATUS.md auto-commit completed
[2025-08-07 05:35:32] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 05:37:12] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 05:37:12] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 278 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 278
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 286

🔧 Action required: 286 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 05:37:13] PRE-COMMIT: SSOT validation passed
[2025-08-07 05:37:13] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 05:37:13] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 05:37:13] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 05:37:13] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 05:37:13] POST-COMMIT: Processing commit: 90cedc8 - docs: update STATUS.md for Phase 1 completion
[2025-08-07 05:37:13] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 06:38:30] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 06:38:30] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 06:38:30] PRE-COMMIT: SSOT validation passed
[2025-08-07 06:38:31] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 🔧 Setup Summary
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: ✅ Progress So Far
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 🔄 Current Work
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: ⏭️ Next Steps
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 🧠 Notes & Observations
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 📊 Key Metrics
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 🎯 Architecture Status
[2025-08-07 06:38:31] PRE-COMMIT: WARNING: Missing required section: 🔗 Quick References
[2025-08-07 06:38:31] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 06:38:31] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 06:38:31] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 06:38:31] POST-COMMIT: Processing commit: c64c825 - feat: Update STATUS.md to reflect project completion
[2025-08-07 06:38:31] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 06:57:55] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 06:57:55] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 06:57:55] PRE-COMMIT: SSOT validation passed
[2025-08-07 06:57:55] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 06:57:56] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 06:57:56] POST-COMMIT: Processing commit: 3789c72 - feat: Complete workspace cleanup and documentation updates
[2025-08-07 06:57:56] POST-COMMIT: Running STATUS.md automation...
❌ Error: Format validation failed
Traceback (most recent call last):
  File "/workspaces/code/scripts/auto_update_status.py", line 590, in main
    result = updater.run_update(
  File "/workspaces/code/scripts/auto_update_status.py", line 519, in run_update
    raise RuntimeError("Format validation failed")
RuntimeError: Format validation failed
[06:57:56] INFO: Starting STATUS.md update (source: git-commit)
[06:57:56] INFO: Updating timestamp
[06:57:56] INFO: Timestamp updated to: August 07, 2025
[06:57:56] INFO: Analyzing last 5 commits
[06:57:56] INFO: Commit analysis: 5 commits categorized
[06:57:56] INFO: Analyzing source code status
[06:57:57] INFO: Code analysis: 75 TODOs, 2 drivers checked
[06:57:57] INFO: Updating architecture status
[06:57:57] ERROR: Missing required section: 🔧 Setup Summary
[2025-08-07 06:57:57] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 06:57:57] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 06:57:57] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 07:04:21] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 07:04:21] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 07:04:22] PRE-COMMIT: SSOT validation passed
[2025-08-07 07:04:22] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 07:04:22] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 07:04:22] POST-COMMIT: Processing commit: 6df61f6 - feat: Consolidate archive directories and update CAN API to v1.0.0
[2025-08-07 07:04:22] POST-COMMIT: Running STATUS.md automation...
❌ Error: Format validation failed
Traceback (most recent call last):
  File "/workspaces/code/scripts/auto_update_status.py", line 590, in main
    result = updater.run_update(
  File "/workspaces/code/scripts/auto_update_status.py", line 519, in run_update
    raise RuntimeError("Format validation failed")
RuntimeError: Format validation failed
[07:04:22] INFO: Starting STATUS.md update (source: git-commit)
[07:04:22] INFO: Updating timestamp
[07:04:22] INFO: Timestamp updated to: August 07, 2025
[07:04:22] INFO: Analyzing last 5 commits
[07:04:22] INFO: Commit analysis: 5 commits categorized
[07:04:22] INFO: Analyzing source code status
[07:04:23] INFO: Code analysis: 75 TODOs, 2 drivers checked
[07:04:23] INFO: Updating architecture status
[07:04:23] ERROR: Missing required section: 🔧 Setup Summary
[2025-08-07 07:04:23] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 07:04:23] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 07:04:23] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 07:18:38] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 07:18:38] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 07:18:38] PRE-COMMIT: SSOT validation passed
[2025-08-07 07:18:38] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 07:18:38] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 07:18:39] POST-COMMIT: Processing commit: 7de2689 - feat: Move legacy archive to organized archive structure
[2025-08-07 07:18:39] POST-COMMIT: Running STATUS.md automation...
❌ Error: Format validation failed
Traceback (most recent call last):
  File "/workspaces/code/scripts/auto_update_status.py", line 590, in main
    result = updater.run_update(
  File "/workspaces/code/scripts/auto_update_status.py", line 519, in run_update
    raise RuntimeError("Format validation failed")
RuntimeError: Format validation failed
[07:18:39] INFO: Starting STATUS.md update (source: git-commit)
[07:18:39] INFO: Updating timestamp
[07:18:39] INFO: Timestamp updated to: August 07, 2025
[07:18:39] INFO: Analyzing last 5 commits
[07:18:39] INFO: Commit analysis: 5 commits categorized
[07:18:39] INFO: Analyzing source code status
[07:18:39] INFO: Code analysis: 75 TODOs, 2 drivers checked
[07:18:39] INFO: Updating architecture status
[07:18:39] ERROR: Missing required section: 🔧 Setup Summary
[2025-08-07 07:18:39] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 07:18:39] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 07:18:39] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 07:23:09] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 07:23:10] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 07:23:10] PRE-COMMIT: SSOT validation passed
[2025-08-07 07:23:10] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 07:23:10] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 07:23:10] POST-COMMIT: Processing commit: 46181b8 - feat: Add comprehensive workspace cleanup instruction methodology
[2025-08-07 07:23:10] POST-COMMIT: Running STATUS.md automation...
❌ Error: Format validation failed
Traceback (most recent call last):
  File "/workspaces/code/scripts/auto_update_status.py", line 590, in main
    result = updater.run_update(
  File "/workspaces/code/scripts/auto_update_status.py", line 519, in run_update
    raise RuntimeError("Format validation failed")
RuntimeError: Format validation failed
[07:23:10] INFO: Starting STATUS.md update (source: git-commit)
[07:23:10] INFO: Updating timestamp
[07:23:10] INFO: Timestamp updated to: August 07, 2025
[07:23:10] INFO: Analyzing last 5 commits
[07:23:10] INFO: Commit analysis: 5 commits categorized
[07:23:10] INFO: Analyzing source code status
[07:23:11] INFO: Code analysis: 75 TODOs, 2 drivers checked
[07:23:11] INFO: Updating architecture status
[07:23:11] ERROR: Missing required section: 🔧 Setup Summary
[2025-08-07 07:23:11] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 07:23:11] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 07:23:11] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 07:50:17] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 07:50:17] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 07:50:17] PRE-COMMIT: SSOT validation passed
[2025-08-07 07:50:18] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: ✅ Progress So Far
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: 🔄 Current Work
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: ⏭️ Next Steps
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: 🧠 Notes & Observations
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: 📊 Key Metrics
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: 🎯 Architecture Status
[2025-08-07 07:50:18] PRE-COMMIT: WARNING: Missing required section: 🔗 Quick References
[2025-08-07 07:50:18] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 07:50:18] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 07:50:18] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 07:50:18] POST-COMMIT: Processing commit: d976999 - feat: Integrate RTOS roadmap and complete archive organization
[2025-08-07 07:50:18] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 12:13:30] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 12:13:31] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 12:13:32] PRE-COMMIT: SSOT validation passed
[2025-08-07 12:13:32] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 12:13:32] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 12:13:32] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 12:13:32] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 12:13:32] POST-COMMIT: Processing commit: 5eab4b9 - Complete comprehensive semantic search infrastructure
[2025-08-07 12:13:32] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 12:33:41] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 12:33:41] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 12:33:41] PRE-COMMIT: SSOT validation passed
[2025-08-07 12:33:41] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 12:33:41] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 12:33:41] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 12:33:41] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 12:33:42] POST-COMMIT: Processing commit: 9f56764 - docs: update all documentation to reflect completed semantic search infrastructure
[2025-08-07 12:33:42] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 16:15:55] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 16:15:55] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 277 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 315: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 530: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 544: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 16 more files with violations

⚠️  Found 5 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/safety/l6470_fault_monitor.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 277
   • Include dependency issues: 5
   • Configuration inconsistencies: 1
   • Total issues found: 283

🔧 Action required: 283 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 16:15:55] PRE-COMMIT: SSOT validation passed
[2025-08-07 16:15:55] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 16:15:55] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 16:15:55] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 16:15:55] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 16:15:55] POST-COMMIT: Processing commit: be702e0 - feat: Complete FreeRTOS documentation suite and instruction system
[2025-08-07 16:15:56] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 18:03:52] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 18:03:52] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 280 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 316: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 531: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 545: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 280
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 288

🔧 Action required: 288 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 18:03:53] PRE-COMMIT: SSOT validation passed
[2025-08-07 18:03:53] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 18:03:53] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 18:03:53] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 18:03:53] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 18:03:53] POST-COMMIT: Processing commit: 02393bb - feat: Update STATUS.md and PHASE1 plan to reflect ARM_CM7 FreeRTOS migration completion
[2025-08-07 18:03:53] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 18:09:41] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 18:09:41] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 280 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 316: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 531: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 545: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 280
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 288

🔧 Action required: 288 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 18:09:41] PRE-COMMIT: SSOT validation passed
[2025-08-07 18:09:41] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 18:09:41] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 18:09:42] POST-COMMIT: Processing commit: c5e77c4 - feat: Create comprehensive Phase 2 Custom Task Implementation Plan
[2025-08-07 18:09:42] POST-COMMIT: Running STATUS.md automation...
[18:09:42] INFO: Starting STATUS.md update (source: git-commit)
[18:09:42] INFO: Updating timestamp
[18:09:42] INFO: Analyzing last 5 commits
[18:09:42] INFO: Commit analysis: 5 commits categorized
[18:09:42] INFO: Analyzing source code status
[18:09:42] INFO: Code analysis: 79 TODOs, 2 drivers checked
[18:09:42] INFO: Updating architecture status
[18:09:42] INFO: Format validation passed
[18:09:42] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 18:09:42] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 18:09:42] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 18:09:42] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 19:22:42] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 19:22:42] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 280 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 316: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 531: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 545: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 17 more files with violations

⚠️  Found 7 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/safety/emergency_stop_abstracted.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 280
   • Include dependency issues: 7
   • Configuration inconsistencies: 1
   • Total issues found: 288

🔧 Action required: 288 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 19:22:43] PRE-COMMIT: SSOT validation passed
[2025-08-07 19:22:43] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 19:22:43] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 19:22:43] POST-COMMIT: Processing commit: c972ae0 - feat: complete FreeRTOS integration and automatic changelog system
[2025-08-07 19:22:43] POST-COMMIT: Running STATUS.md automation...
[19:22:43] INFO: Starting STATUS.md update (source: git-commit)
[19:22:43] INFO: Updating timestamp
[19:22:43] INFO: Analyzing last 5 commits
[19:22:43] INFO: Commit analysis: 5 commits categorized
[19:22:43] INFO: Analyzing source code status
[19:22:44] INFO: Code analysis: 79 TODOs, 2 drivers checked
[19:22:44] INFO: Updating architecture status
[19:22:44] INFO: Format validation passed
[19:22:44] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 19:22:44] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 19:22:44] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 19:22:44] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 19:30:38] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 19:30:38] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-07 19:30:38] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 19:30:38] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 19:30:38] POST-COMMIT: Processing commit: 194b0c6 - chore: exclude semantic vector database from git tracking
[2025-08-07 19:30:38] POST-COMMIT: Running STATUS.md automation...
[19:30:38] INFO: Starting STATUS.md update (source: git-commit)
[19:30:38] INFO: Updating timestamp
[19:30:38] INFO: Analyzing last 5 commits
[19:30:38] INFO: Commit analysis: 5 commits categorized
[19:30:38] INFO: Analyzing source code status
[19:30:39] INFO: Code analysis: 79 TODOs, 2 drivers checked
[19:30:39] INFO: Updating architecture status
[19:30:39] INFO: Format validation passed
[19:30:39] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 19:30:39] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 19:30:39] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 19:30:39] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 20:49:01] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 20:49:01] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 288 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 316: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 531: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 545: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 18 more files with violations

⚠️  Found 8 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 288
   • Include dependency issues: 8
   • Configuration inconsistencies: 1
   • Total issues found: 297

🔧 Action required: 297 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 20:49:02] PRE-COMMIT: SSOT validation passed
[2025-08-07 20:49:02] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 20:49:02] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 20:49:02] POST-COMMIT: Processing commit: 6fd8cb9 - docs: Update README.md language to reflect mature production-ready status
[2025-08-07 20:49:02] POST-COMMIT: Running STATUS.md automation...
[20:49:02] INFO: Starting STATUS.md update (source: git-commit)
[20:49:02] INFO: Updating timestamp
[20:49:02] INFO: Analyzing last 5 commits
[20:49:02] INFO: Commit analysis: 5 commits categorized
[20:49:02] INFO: Analyzing source code status
[20:49:04] INFO: Code analysis: 79 TODOs, 2 drivers checked
[20:49:04] INFO: Updating architecture status
[20:49:04] INFO: Format validation passed
[20:49:04] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 20:49:04] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 20:49:04] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 20:49:04] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 20:55:25] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 20:55:25] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 288 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   📁 src/controllers/real_time_control.c:
      Line 316: htim_control_loop.Init.Period = 1000 - 1; // 1ms period...
      💡 Time values should use timestamp_ms_t type
      Line 531: position_control_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type
      Line 545: motion_profile_update(motor_id, 1); // 1ms time step...
      💡 Time values should use timestamp_ms_t type

   ... and 18 more files with violations

⚠️  Found 8 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 288
   • Include dependency issues: 8
   • Configuration inconsistencies: 1
   • Total issues found: 297

🔧 Action required: 297 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 20:55:25] PRE-COMMIT: SSOT validation passed
[2025-08-07 20:55:25] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 20:55:26] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 20:55:26] POST-COMMIT: Processing commit: 48babde - feat: Complete Phase 5A industrial enhancement and workspace cleanup
[2025-08-07 20:55:26] POST-COMMIT: Running STATUS.md automation...
[20:55:26] INFO: Starting STATUS.md update (source: git-commit)
[20:55:26] INFO: Updating timestamp
[20:55:26] INFO: Analyzing last 5 commits
[20:55:26] INFO: Commit analysis: 5 commits categorized
[20:55:26] INFO: Analyzing source code status
[20:55:26] INFO: Code analysis: 79 TODOs, 2 drivers checked
[20:55:26] INFO: Updating architecture status
[20:55:26] INFO: Format validation passed
[20:55:26] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 20:55:26] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 20:55:26] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 20:55:26] POST-COMMIT: === Post-commit hook completed ===
[2025-08-07 23:06:53] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 23:06:53] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 23:06:53] PRE-COMMIT: SSOT validation passed
[2025-08-07 23:06:53] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 23:06:53] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 23:06:53] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 23:06:53] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 23:06:53] POST-COMMIT: Processing commit: 8cbf9bc - feat: Complete Phase 1.3 + STATUS.md instruction system + Phase 1.4 comprehensive plan
[2025-08-07 23:06:53] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 23:20:04] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 23:20:04] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 23:20:05] PRE-COMMIT: SSOT validation passed
[2025-08-07 23:20:05] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-07 23:20:05] PRE-COMMIT: STATUS.md format validation completed
[2025-08-07 23:20:05] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 23:20:05] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 23:20:05] POST-COMMIT: Processing commit: ba4f512 - feat: Implement comprehensive feature tracking system
[2025-08-07 23:20:05] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-07 23:23:46] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-07 23:23:46] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-07 23:23:46] PRE-COMMIT: SSOT validation passed
[2025-08-07 23:23:46] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-07 23:23:47] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-07 23:23:47] POST-COMMIT: Processing commit: 3459ceb - feat: Implement comprehensive feature tracking system
[2025-08-07 23:23:47] POST-COMMIT: Running STATUS.md automation...
[23:23:47] INFO: Starting STATUS.md update (source: git-commit)
[23:23:47] INFO: Updating timestamp
[23:23:47] INFO: Analyzing last 5 commits
[23:23:47] INFO: Commit analysis: 5 commits categorized
[23:23:47] INFO: Analyzing source code status
[23:23:47] INFO: Code analysis: 79 TODOs, 2 drivers checked
[23:23:47] INFO: Updating architecture status
[23:23:47] INFO: Format validation passed
[23:23:47] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-07 23:23:47] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-07 23:23:47] POST-COMMIT: No STATUS.md changes needed
[2025-08-07 23:23:47] POST-COMMIT: === Post-commit hook completed ===
[2025-08-08 00:02:55] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-08 00:02:55] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-08 00:02:55] PRE-COMMIT: SSOT validation passed
[2025-08-08 00:02:55] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-08 00:02:55] PRE-COMMIT: STATUS.md format validation completed
[2025-08-08 00:02:55] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-08 00:02:56] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-08 00:02:56] POST-COMMIT: Processing commit: edf8841 - docs: Major documentation cleanup and consolidation
[2025-08-08 00:02:56] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-08 00:20:27] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-08 00:20:27] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-08 00:20:28] PRE-COMMIT: SSOT validation passed
[2025-08-08 00:20:28] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-08 00:20:28] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-08 00:20:28] POST-COMMIT: Processing commit: 2e59aeb - instructions: Major instruction system cleanup and consolidation
[2025-08-08 00:20:28] POST-COMMIT: Running STATUS.md automation...
[00:20:28] INFO: Starting STATUS.md update (source: git-commit)
[00:20:28] INFO: Updating timestamp
[00:20:28] INFO: Timestamp updated to: August 08, 2025
[00:20:28] INFO: Analyzing last 5 commits
[00:20:28] INFO: Commit analysis: 5 commits categorized
[00:20:28] INFO: Analyzing source code status
[00:20:29] INFO: Code analysis: 79 TODOs, 2 drivers checked
[00:20:29] INFO: Updating architecture status
[00:20:29] INFO: Format validation passed
[00:20:29] INFO: STATUS.md updated successfully

📊 Update Summary:
  Source: git-commit
  Changes Made: Yes
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
✅ STATUS.md updated successfully!
[2025-08-08 00:20:29] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-08 00:20:29] POST-COMMIT: STATUS.md was updated, staging and committing changes
[2025-08-08 00:20:34] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-08 00:20:34] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-08 00:20:34] POST-COMMIT: Processing commit: d1c7ce5 - 📊 Auto-update STATUS.md from commit 2e59aeb
[2025-08-08 00:20:34] POST-COMMIT: Processing commit: d1c7ce5 - 📊 Auto-update STATUS.md from commit 2e59aeb
[2025-08-08 00:20:34] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-08 00:20:34] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[main d1c7ce5] 📊 Auto-update STATUS.md from commit 2e59aeb
 1 file changed, 1 insertion(+), 1 deletion(-)
[2025-08-08 00:20:34] POST-COMMIT: STATUS.md auto-commit completed
[2025-08-08 00:20:34] POST-COMMIT: === Post-commit hook completed ===
[2025-08-10 00:47:11] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 00:47:11] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-10 00:47:11] PRE-COMMIT: SSOT validation passed
[2025-08-10 00:47:11] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 00:47:12] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 00:47:12] POST-COMMIT: Processing commit: 09cf4f9 - feat: comprehensive documentation cleanup and development workflow integration
[2025-08-10 00:47:12] POST-COMMIT: Running STATUS.md automation...
[00:47:12] INFO: Starting STATUS.md update (source: git-commit)
[00:47:12] INFO: Updating timestamp
[00:47:12] INFO: Timestamp updated to: August 10, 2025
[00:47:12] INFO: Analyzing last 5 commits
[00:47:12] INFO: Commit analysis: 5 commits categorized
[00:47:12] INFO: Analyzing source code status
[00:47:14] INFO: Code analysis: 79 TODOs, 2 drivers checked
[00:47:14] INFO: Updating architecture status
[00:47:14] INFO: Format validation passed
[00:47:14] INFO: STATUS.md updated successfully

📊 Update Summary:
  Source: git-commit
  Changes Made: Yes
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
✅ STATUS.md updated successfully!
[2025-08-10 00:47:14] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-10 00:47:14] POST-COMMIT: STATUS.md was updated, staging and committing changes
[2025-08-10 00:47:16] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 00:47:16] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 00:47:16] POST-COMMIT: Processing commit: 1d5fbaa - 📊 Auto-update STATUS.md from commit 09cf4f9
[2025-08-10 00:47:16] POST-COMMIT: Processing commit: 1d5fbaa - 📊 Auto-update STATUS.md from commit 09cf4f9
[2025-08-10 00:47:17] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-10 00:47:17] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[main 1d5fbaa] 📊 Auto-update STATUS.md from commit 09cf4f9
 1 file changed, 1 insertion(+), 1 deletion(-)
[2025-08-10 00:47:17] POST-COMMIT: STATUS.md auto-commit completed
[2025-08-10 00:47:17] POST-COMMIT: === Post-commit hook completed ===
[2025-08-10 00:58:28] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 00:58:28] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-10 00:58:28] PRE-COMMIT: SSOT validation passed
[2025-08-10 00:58:28] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 00:58:28] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 00:58:28] POST-COMMIT: Processing commit: 59999a0 - feat: add VS Code workflow tasks and intelligent workflow script
[2025-08-10 00:58:29] POST-COMMIT: Running STATUS.md automation...
[00:58:29] INFO: Starting STATUS.md update (source: git-commit)
[00:58:29] INFO: Updating timestamp
[00:58:29] INFO: Analyzing last 5 commits
[00:58:29] INFO: Commit analysis: 5 commits categorized
[00:58:29] INFO: Analyzing source code status
[00:58:29] INFO: Code analysis: 79 TODOs, 2 drivers checked
[00:58:29] INFO: Updating architecture status
[00:58:29] INFO: Format validation passed
[00:58:29] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-10 00:58:29] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-10 00:58:29] POST-COMMIT: No STATUS.md changes needed
[2025-08-10 00:58:29] POST-COMMIT: === Post-commit hook completed ===
[2025-08-10 01:04:06] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 01:04:06] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 295 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 458: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 486: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 948: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 20 more files with violations

⚠️  Found 10 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 295
   • Include dependency issues: 10
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-10 01:04:06] PRE-COMMIT: SSOT validation passed
[2025-08-10 01:04:06] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 01:04:06] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 01:04:07] POST-COMMIT: Processing commit: 26643f0 - feat: configure VS Code shell integration for improved command detection
[2025-08-10 01:04:07] POST-COMMIT: Running STATUS.md automation...
[01:04:07] INFO: Starting STATUS.md update (source: git-commit)
[01:04:07] INFO: Updating timestamp
[01:04:07] INFO: Analyzing last 5 commits
[01:04:07] INFO: Commit analysis: 5 commits categorized
[01:04:07] INFO: Analyzing source code status
[01:04:07] INFO: Code analysis: 79 TODOs, 2 drivers checked
[01:04:07] INFO: Updating architecture status
[01:04:07] INFO: Format validation passed
[01:04:07] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 79
ℹ️  No updates needed
[2025-08-10 01:04:07] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-10 01:04:07] POST-COMMIT: No STATUS.md changes needed
[2025-08-10 01:04:07] POST-COMMIT: === Post-commit hook completed ===
[2025-08-10 18:32:02] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 18:32:03] PRE-COMMIT: Relevant files changed, running SSOT validation...
🔍 Starting SSOT validation...
🔍 SSOT Validation Report for STM32H753ZI Project
============================================================
✅ SSOT structure complete

⚠️  Found 296 potential SSOT violations:

   📁 src/application/main.c:
      Line 103: * - SPI1 for L6470 (stm32h7-spi-l6470.instructions.md)...
      💡 SPI instances should be in hardware_config.h
      Line 104: * - I2C1/I2C2 for AS5600 (stm32h7-i2c-as5600.instructions.md...
      💡 I2C instances should be in hardware_config.h

   📁 src/application/main_application.c:
      Line 28: extern SPI_HandleTypeDef hspi2;   // SPI2 for L6470 drivers...
      💡 SPI instances should be in hardware_config.h
      Line 29: extern I2C_HandleTypeDef hi2c1;   // I2C1 for encoder 0...
      💡 I2C instances should be in hardware_config.h
      Line 30: extern I2C_HandleTypeDef hi2c2;   // I2C2 for encoder 1...
      💡 I2C instances should be in hardware_config.h

   📁 src/communication/comm_protocol.c:
      Line 114: safety_log_event(SAFETY_EVENT_SYSTEM_INIT, 0xFF, (uint32_t)S...
      💡 Hex addresses should be in config headers
      Line 646: uint16_t crc = 0xFFFF;...
      💡 Hex addresses should be in config headers
      Line 654: crc = (crc >> 1) ^ 0xA001;...
      💡 Hex addresses should be in config headers

   📁 src/controllers/motor_characterization.c:
      Line 467: float sweep_amplitude = 5.0f;  // 5 degree amplitude for saf...
      💡 Angles should use angle_deg_t type
      Line 495: HAL_Delay(1); // 1ms delay for 1kHz rate...
      💡 Time values should use timestamp_ms_t type
      Line 957: *mechanical_tc = 0.1f;   // 100ms typical mechanical time co...
      💡 Time values should use timestamp_ms_t type

   📁 src/controllers/motor_controller.c:
      Line 89: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 0);...
      💡 Hex addresses should be in config headers
      Line 95: safety_log_event(SAFETY_EVENT_MOTOR_INIT_BLOCKED, 0xFF, 1);...
      💡 Hex addresses should be in config headers

   ... and 21 more files with violations

⚠️  Found 9 include dependency issues:
   📁 src/hal_abstraction/hal_abstraction_mock.c
      Issue: Uses hardware constants but does not include hardware_config.h
      💡 Add #include "config/hardware_config.h"
   📁 src/hal_abstraction/hal_abstraction_stm32h7.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/power_management.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses communication constants but does not include comm_config.h
      💡 Add #include "config/comm_config.h"
   📁 src/rtos/rtos_tasks.c
      Issue: Uses motor constants but does not include motor_config.h
      💡 Add #include "config/motor_config.h"

⚠️  Found 1 configuration inconsistencies:
   🔗 MAX_MOTORS defined as 2 but system_state.h does not use MAX_MOTORS constant
      Files: src/config/motor_config.h, src/common/system_state.h
      💡 Use MotorState_t motors[MAX_MOTORS] in system_state.h

📊 Summary:
   • Missing SSOT files: 0
   • Hardcoded value violations: 296
   • Include dependency issues: 9
   • Configuration inconsistencies: 1
   • Total issues found: 306

🔧 Action required: 306 issues need attention.

💡 Next steps:
   2. Replace hardcoded values with SSOT references
   3. Add missing SSOT header includes
   4. Fix configuration inconsistencies
   5. Re-run validation: python3 scripts/validate_ssot.py

🚀 SSOT validation complete!
[2025-08-10 18:32:03] PRE-COMMIT: SSOT validation passed
[2025-08-10 18:32:03] PRE-COMMIT: STATUS.md is being committed, validating format...
[2025-08-10 18:32:03] PRE-COMMIT: STATUS.md format validation completed
[2025-08-10 18:32:03] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 18:32:03] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 18:32:03] POST-COMMIT: Processing commit: 2028905 - Complete comprehensive warning elimination and context transfer preparation
[2025-08-10 18:32:03] POST-COMMIT: STATUS.md was modified in this commit, skipping automation to prevent loops
[2025-08-10 18:46:34] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 18:46:34] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-10 18:46:34] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 18:46:34] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 18:46:34] POST-COMMIT: Processing commit: 0b33a7d - fix: exclude semantic vector database from git tracking
[2025-08-10 18:46:34] POST-COMMIT: Running STATUS.md automation...
[18:46:34] INFO: Starting STATUS.md update (source: git-commit)
[18:46:34] INFO: Updating timestamp
[18:46:34] INFO: Analyzing last 5 commits
[18:46:34] INFO: Commit analysis: 5 commits categorized
[18:46:34] INFO: Analyzing source code status
[18:46:35] INFO: Code analysis: 98 TODOs, 2 drivers checked
[18:46:35] INFO: Updating architecture status
[18:46:35] INFO: Format validation passed
[18:46:35] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 98
ℹ️  No updates needed
[2025-08-10 18:46:35] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-10 18:46:35] POST-COMMIT: No STATUS.md changes needed
[2025-08-10 18:46:35] POST-COMMIT: === Post-commit hook completed ===
[2025-08-10 18:48:42] PRE-COMMIT: === Pre-commit validation started ===
[2025-08-10 18:48:42] PRE-COMMIT: No relevant files changed, skipping SSOT validation
[2025-08-10 18:48:42] PRE-COMMIT: === Pre-commit validation completed ===
[2025-08-10 18:48:42] POST-COMMIT: === Post-commit hook triggered ===
[2025-08-10 18:48:42] POST-COMMIT: Processing commit: c5dbf5a - chore: update status automation log
[2025-08-10 18:48:42] POST-COMMIT: Running STATUS.md automation...
[18:48:42] INFO: Starting STATUS.md update (source: git-commit)
[18:48:42] INFO: Updating timestamp
[18:48:42] INFO: Analyzing last 5 commits
[18:48:42] INFO: Commit analysis: 5 commits categorized
[18:48:42] INFO: Analyzing source code status
[18:48:43] INFO: Code analysis: 98 TODOs, 2 drivers checked
[18:48:43] INFO: Updating architecture status
[18:48:43] INFO: Format validation passed
[18:48:43] INFO: No changes detected

📊 Update Summary:
  Source: git-commit
  Changes Made: No
  Build Status: Skipped
  Commits Analyzed: 5
  TODOs Found: 98
ℹ️  No updates needed
[2025-08-10 18:48:43] POST-COMMIT: STATUS.md automation completed successfully
[2025-08-10 18:48:43] POST-COMMIT: No STATUS.md changes needed
[2025-08-10 18:48:43] POST-COMMIT: === Post-commit hook completed ===
